---
title: ""
format: html
params:
  update_data: yes
---

## Registrant data

We try to practice what we preach, so here is the code we use to download the registration data and visualize it.
The data file itself remains private.
We have added `csv/` to the `.gitignore` file so that the data remains available only to users who have it locally on their computers.
Also, note that Rick Gilmore has stored his Gmail account information in an environment variable called `GMAIL_SURVEY`.

```{r}
library(ggplot2)
```


```{r}
if (!dir.exists('csv')) {
  message("Creating missing `csv/`.")
  dir.create("csv")
}

if (params$update_data) {
  options(gargle_oauth_email = Sys.getenv("GMAIL_SURVEY"))
  googledrive::drive_auth()
  
  googledrive::drive_download(
    "Data Management Workshop Spring 2024: Registration (Responses)",
    path = "csv/data-mgmt-wksp.csv",
    type = "csv",
    overwrite = TRUE
    
  )
  message("Data updated.")
} else {
  message("Using stored data.")
}
```

```{r}
registrations <-
  readr::read_csv("csv/data-mgmt-wksp.csv", show_col_types = FALSE)

registrations_clean <- registrations |>
  dplyr::rename(
    timestamp = "Timestamp",
    email = 'Email Address',
    attend = "Will you attend the workshop on Wednesday, March 27, 2024?",
    name = "What is your name?",
    unit = "What is your department or unit?",
    position = "What is your current position?",
    have_case_study = "Do you have a project or dataset that you would like to have considered for a hands-on case study?",
    case_study_details = "If yes, in a sentence or two, please describe your project or dataset.",
    comments = "Any comments?"
  ) |>
  # Remove duplicate rows
  dplyr::distinct() |>
  # Convert timestamp into proper dates
  dplyr::mutate(timestamp = lubridate::mdy_hms(timestamp,
                                               tz = "America/New_York")) |>
  # Normalize names
  dplyr::mutate(
    unit = dplyr::recode(
      unit,
      `ESM-Ecosystem Science and Mgmt` = "Ecosystem Science & Mgmt",
      `Earth and Environmental Systems Institute` = "Earth & Environmental Systems Institute",
      `Earth and Environmental Systems Institute` = "Earth & Environmental Systems Institute",
      `FOOD SCIENCE` = "Food Science",
      `Earth and Mineral Sciences, Energy Institute` = "Energy Institute",
      `Center for Healthy Aging / HHD` = "Center for Healthy Aging",
      `BMB` = "Biochemistry & Molecular Biology",
      `Spanish, Italian and Portuguese` = "Spanish, Italian, & Portuguese",
      `Spanish, Italian, and Portuguese` = "Spanish, Italian, & Portuguese",
      `Department of Nutritional Sciences` = "Nutritional Sciences",
      `Department of Medicine, Division of Endocrinology` = "Medicine"
    )
  ) |>
  # Add college
  dplyr::mutate(
    college = dplyr::case_match(
      unit,
      "Statistics" ~ "ECoS",
      "Biology" ~ "ECoS",
      "Biochemistry & Molecular Biology" ~ "ECoS",
      "Physics" ~ "ECoS",
      "Chemistry" ~ "ECoS",
      "Psychology" ~ "CLA",
      "Spanish, Italian, & Portuguese" ~ "CLA",
      "Research Informatics and Publishing" ~ "Libraries",
      "Political Science" ~ "CLA",
      "Applied Linguistics" ~ "CLA",
      "Global Languages & Literatures" ~ "CLA",
      "Sociology" ~ "CLA",
      "English" ~ "CLA",
      "C-SoDA" ~ "CLA",
      "Office of Digital Pedagogies and Initiatives" ~ "CLA",
      "Asian Studies" ~ "CLA",
      "IST" ~ "IST",
      "Anthropology" ~ "CLA",
      "Chemical Engineering" ~ "Eng",
      "Civil and Environmental Eng" ~ "Eng",
      "Material Science and Engineering" ~ "Eng",
      "Engineering Science & Mechanics" ~ "Eng",
      "Biomedical Engineering" ~ "Eng",
      "Mechanical Engineering" ~ "Eng",
      "Nutritional Sciences" ~ "HHD",
      "HDFS" ~ "HHD",
      "Kinesiology" ~ "HHD",
      "Recreation, Park, & Tourism Management" ~ "HHD",
      "Bellisario College of Communication" ~ "Comm",
      "Marketing" ~ "Smeal",
      "Food Science" ~ "Ag",
      "Ecosystem Science & Mgmt" ~ "Ag",
      "Entomology" ~ "Ag",
      "Plant Pathology & Environmental Microbiology" ~ "Ag",
      "Neuroscience" ~ "Med",
      "Medicine" ~ "Med",
      "College of Human and Health Development" ~ "HHD",
      "Center for Healthy Aging" ~ "HHD",
      "Earth & Environmental Systems Institute" ~ "EMS",
      "Energy Institute" ~ "EMS",
      "Nursing" ~ "Nursing"
    ),
    .default = "Unknown",
    .missing = "Unknown"
  )
```

### Time series

```{r fig-registration-time-series, fig.cap = "Time series of registrations"}
registrations_clean |>
  dplyr::arrange(timestamp) |>
  dplyr::mutate(resp_index = seq_along(timestamp)) |>
  ggplot() +
  aes(x = timestamp, y = resp_index, color = position) +
  geom_point() +
  # geom_line(group = 1) +
  theme(axis.text.x = element_text(angle = 90)) +
  labs(x = NULL, y = 'n') +
  theme(legend.position = "bottom", legend.title = element_blank())
```

### Unit

```{r}
registrations_clean |>
  ggplot() +
  aes(x = unit, fill = unit, color = unit) +
  geom_bar() +
  theme(axis.text.x = element_blank()) +
  theme(legend.position = "bottom", legend.title = element_blank())
```

```{r}
registrations_clean |>
  ggplot() +
  aes(x = college, fill = college, color = college) +
  geom_bar() +
  theme(axis.text.x = element_blank()) +
  theme(legend.position = "bottom", legend.title = element_blank())
```

### Position

```{r fig-registrations-by-position, fig.cap="Registrations by position"}
registrations_clean |>
  ggplot() +
  aes(x = position, fill = position) +
  geom_bar() +
  theme(axis.text.x = element_blank()) +
  theme(legend.position = "bottom", legend.title = element_blank())
```

### Case study

```{r fig-registrations-has-case-study, fig.cap="Do registrants have a possible case study?"}
registrations_clean |>
  ggplot() +
  aes(x = have_case_study) +
  geom_bar()
```

